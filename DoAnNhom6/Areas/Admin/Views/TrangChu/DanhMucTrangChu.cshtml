@model DoAnNhom6.ViewModels.DanhMucQL
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


@{
    ViewData["Title"] = "DanhMucTrangChu";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

    <div class="row">
        <div class="col-md-4 stretch-card grid-margin">
            <div class="card bg-gradient-danger card-img-holder text-white">
                <div class="card-body">
                    <img src="../../LAdmin/assets/images/dashboard/circle.svg" class="card-img-absolute" alt="circle-image" />
                    <h4 class="font-weight-normal mb-3">
                       Tổng Doanh Thu <i class="mdi mdi-chart-line mdi-24px float-right"></i>
                    </h4>
                <h2 class="mb-5">$   @Html.DisplayFor(model => model.DoanhThu)</h2>
                    <h6 class="card-text">Increased by 60%</h6>
                </div>
            </div>
        </div>
        <div class="col-md-4 stretch-card grid-margin">
            <div class="card bg-gradient-info card-img-holder text-white">
                <div class="card-body">
                    <img src="assets/images/dashboard/circle.svg" class="card-img-absolute" alt="circle-image" />
                    <h4 class="font-weight-normal mb-3">
                       Khách Hàng <i class="mdi mdi-bookmark-outline mdi-24px float-right"></i>
                    </h4>
                <h2 class="mb-5">  @Html.DisplayFor(model => model.SoNguoiDangKy)</h2>
                    <h6 class="card-text">Decreased by 10%</h6>
                </div>
            </div>
        </div>
        <div class="col-md-4 stretch-card grid-margin">
            <div class="card bg-gradient-success card-img-holder text-white">
                <div class="card-body">
                    <img src="assets/images/dashboard/circle.svg" class="card-img-absolute" alt="circle-image" />
                    <h4 class="font-weight-normal mb-3">
                        Số Người Đang Làm Việc <i class="mdi mdi-diamond mdi-24px float-right"></i>
                    </h4>
                <h2 class="mb-5">  @Html.DisplayFor(model => model.SoNguoiDangLamViec)</h2>
                    <h6 class="card-text">Increased by 5%</h6>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-7 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <div class="clearfix">
                        <h4 class="card-title float-left">Visit And Sales Statistics</h4>
                        <div id="visit-sale-chart-legend" class="rounded-legend legend-horizontal legend-top-right float-right"></div>
                    </div>
                    <canvas id="visit-sale-chart" class="mt-4"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-5 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Traffic Sources</h4>
                    <canvas id="traffic-chart"></canvas>
                    <div id="traffic-chart-legend" class="rounded-legend legend-vertical legend-bottom-left pt-4"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12 grid-margin">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Recent Tickets</h4>
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th> Assignee </th>
                                    <th> Subject </th>
                                    <th> Status </th>
                                    <th> Last Update </th>
                                    <th> Tracking ID </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        <img src="assets/images/faces/face1.jpg" class="me-2" alt="image"> David Grey
                                    </td>
                                    <td> Fund is not recieved </td>
                                    <td>
                                        <label class="badge badge-gradient-success">DONE</label>
                                    </td>
                                    <td> Dec 5, 2017 </td>
                                    <td> WD-12345 </td>
                                </tr>
                                <tr>
                                    <td>
                                        <img src="assets/images/faces/face2.jpg" class="me-2" alt="image"> Stella Johnson
                                    </td>
                                    <td> High loading time </td>
                                    <td>
                                        <label class="badge badge-gradient-warning">PROGRESS</label>
                                    </td>
                                    <td> Dec 12, 2017 </td>
                                    <td> WD-12346 </td>
                                </tr>
                                <tr>
                                    <td>
                                        <img src="assets/images/faces/face3.jpg" class="me-2" alt="image"> Marina Michel
                                    </td>
                                    <td> Website down for one week </td>
                                    <td>
                                        <label class="badge badge-gradient-info">ON HOLD</label>
                                    </td>
                                    <td> Dec 16, 2017 </td>
                                    <td> WD-12347 </td>
                                </tr>
                                <tr>
                                    <td>
                                        <img src="assets/images/faces/face4.jpg" class="me-2" alt="image"> John Doe
                                    </td>
                                    <td> Loosing control on server </td>
                                    <td>
                                        <label class="badge badge-gradient-danger">REJECTED</label>
                                    </td>
                                    <td> Dec 3, 2017 </td>
                                    <td> WD-12348 </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-7 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Project Status</h4>
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th> # </th>
                                    <th> Name </th>
                                    <th> Deadline </th>
                                    <th> Progress </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td> 1 </td>
                                    <td> Herman Beck </td>
                                    <td> May 15, 2015 </td>
                                    <td>
                                        <div class="progress">
                                            <div class="progress-bar bg-gradient-success" role="progressbar" style="width: 25%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td> 2 </td>
                                    <td> Messsy Adam </td>
                                    <td> Jul 01, 2015 </td>
                                    <td>
                                        <div class="progress">
                                            <div class="progress-bar bg-gradient-danger" role="progressbar" style="width: 75%" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td> 3 </td>
                                    <td> John Richards </td>
                                    <td> Apr 12, 2015 </td>
                                    <td>
                                        <div class="progress">
                                            <div class="progress-bar bg-gradient-warning" role="progressbar" style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td> 4 </td>
                                    <td> Peter Meggik </td>
                                    <td> May 15, 2015 </td>
                                    <td>
                                        <div class="progress">
                                            <div class="progress-bar bg-gradient-primary" role="progressbar" style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td> 5 </td>
                                    <td> Edward </td>
                                    <td> May 03, 2015 </td>
                                    <td>
                                        <div class="progress">
                                            <div class="progress-bar bg-gradient-danger" role="progressbar" style="width: 35%" aria-valuenow="35" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td> 5 </td>
                                    <td> Ronald </td>
                                    <td> Jun 05, 2015 </td>
                                    <td>
                                        <div class="progress">
                                            <div class="progress-bar bg-gradient-info" role="progressbar" style="width: 65%" aria-valuenow="65" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-5 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title text-white">Todo</h4>
                    <div class="add-items d-flex">
                        <input type="text" class="form-control todo-list-input" placeholder="What do you need to do today?">
                        <button class="add btn btn-gradient-primary font-weight-bold todo-list-add-btn" id="add-task">Add</button>
                    </div>
                    <div class="list-wrapper">
                        <ul class="d-flex flex-column-reverse todo-list todo-list-custom">
                            <li>
                                <div class="form-check">
                                    <label class="form-check-label">
                                        <input class="checkbox" type="checkbox"> Meeting with Alisa
                                    </label>
                                </div>
                                <i class="remove mdi mdi-close-circle-outline"></i>
                            </li>
                            <li class="completed">
                                <div class="form-check">
                                    <label class="form-check-label">
                                        <input class="checkbox" type="checkbox" checked> Call John
                                    </label>
                                </div>
                                <i class="remove mdi mdi-close-circle-outline"></i>
                            </li>
                            <li>
                                <div class="form-check">
                                    <label class="form-check-label">
                                        <input class="checkbox" type="checkbox"> Create invoice
                                    </label>
                                </div>
                                <i class="remove mdi mdi-close-circle-outline"></i>
                            </li>
                            <li>
                                <div class="form-check">
                                    <label class="form-check-label">
                                        <input class="checkbox" type="checkbox"> Print Statements
                                    </label>
                                </div>
                                <i class="remove mdi mdi-close-circle-outline"></i>
                            </li>
                            <li class="completed">
                                <div class="form-check">
                                    <label class="form-check-label">
                                        <input class="checkbox" type="checkbox" checked> Prepare for presentation
                                    </label>
                                </div>
                                <i class="remove mdi mdi-close-circle-outline"></i>
                            </li>
                            <li>
                                <div class="form-check">
                                    <label class="form-check-label">
                                        <input class="checkbox" type="checkbox"> Pick up kids from school
                                    </label>
                                </div>
                                <i class="remove mdi mdi-close-circle-outline"></i>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

@section Scripts {
    <script type="text/javascript">
        (function ($) {
            'use strict';
            $(function () {

                Chart.defaults.global.legend.labels.usePointStyle = true;

                if ($("#serviceSaleProgress").length) {
                    var bar = new ProgressBar.Circle(serviceSaleProgress, {
                        color: 'url(#gradient)',
                        // This has to be the same size as the maximum width to
                        // prevent clipping
                        strokeWidth: 8,
                        trailWidth: 8,
                        easing: 'easeInOut',
                        duration: 1400,
                        text: {
                            autoStyleContainer: false
                        },
                        from: { color: '#aaa', width: 6 },
                        to: { color: '#57c7d4', width: 6 }
                    });

                    bar.animate(.65);  // Number from 0.0 to 1.0
                    bar.path.style.strokeLinecap = 'round';
                    let linearGradient = '<defs><linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="0%" gradientUnits="userSpaceOnUse"><stop offset="20%" stop-color="#da8cff"/><stop offset="50%" stop-color="#9a55ff"/></linearGradient></defs>';
                    bar.svg.insertAdjacentHTML('afterBegin', linearGradient);
                }
                if ($("#productSaleProgress").length) {
                    var bar = new ProgressBar.Circle(productSaleProgress, {
                        color: 'url(#productGradient)',
                        // This has to be the same size as the maximum width to
                        // prevent clipping
                        strokeWidth: 8,
                        trailWidth: 8,
                        easing: 'easeInOut',
                        duration: 1400,
                        text: {
                            autoStyleContainer: false
                        },
                        from: { color: '#aaa', width: 6 },
                        to: { color: '#57c7d4', width: 6 }
                    });

                    bar.animate(.6);  // Number from 0.0 to 1.0
                    bar.path.style.strokeLinecap = 'round';
                    let linearGradient = '<defs><linearGradient id="productGradient" x1="0%" y1="0%" x2="100%" y2="0%" gradientUnits="userSpaceOnUse"><stop offset="40%" stop-color="#36d7e8"/><stop offset="70%" stop-color="#b194fa"/></linearGradient></defs>';
                    bar.svg.insertAdjacentHTML('afterBegin', linearGradient);
                }
                if ($("#points-chart").length) {
                    var ctx = document.getElementById('points-chart').getContext("2d");

                    var gradientStrokeViolet = ctx.createLinearGradient(0, 0, 0, 181);
                    gradientStrokeViolet.addColorStop(0, 'rgba(218, 140, 255, 1)');
                    gradientStrokeViolet.addColorStop(1, 'rgba(154, 85, 255, 1)');

                    var myChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: [1, 2, 3, 4, 5, 6, 7, 8],
                            datasets: [
                                {
                                    label: "North Zone",
                                    borderColor: gradientStrokeViolet,
                                    backgroundColor: gradientStrokeViolet,
                                    hoverBackgroundColor: gradientStrokeViolet,
                                    pointRadius: 0,
                                    fill: false,
                                    borderWidth: 1,
                                    fill: 'origin',
                                    data: [20, 40, 15, 35, 25, 50, 30, 20]
                                },
                                {
                                    label: "South Zone",
                                    borderColor: '#e9eaee',
                                    backgroundColor: '#e9eaee',
                                    hoverBackgroundColor: '#e9eaee',
                                    pointRadius: 0,
                                    fill: false,
                                    borderWidth: 1,
                                    fill: 'origin',
                                    data: [40, 30, 20, 10, 50, 15, 35, 20]
                                }
                            ]
                        },
                        options: {
                            legend: {
                                display: false
                            },
                            scales: {
                                yAxes: [{
                                    ticks: {
                                        display: false,
                                        min: 0,
                                        stepSize: 10
                                    },
                                    gridLines: {
                                        drawBorder: false,
                                        display: false
                                    }
                                }],
                                xAxes: [{
                                    gridLines: {
                                        display: false,
                                        drawBorder: false,
                                        color: 'rgba(0,0,0,1)',
                                        zeroLineColor: '#eeeeee'
                                    },
                                    ticks: {
                                        padding: 20,
                                        fontColor: "#9c9fa6",
                                        autoSkip: true,
                                    },
                                    barPercentage: 0.7
                                }]
                            }
                        },
                        elements: {
                            point: {
                                radius: 0
                            }
                        }
                    })
                }
                if ($("#events-chart").length) {
                    var ctx = document.getElementById('events-chart').getContext("2d");

                    var gradientStrokeBlue = ctx.createLinearGradient(0, 0, 0, 181);
                    gradientStrokeBlue.addColorStop(0, 'rgba(54, 215, 232, 1)');
                    gradientStrokeBlue.addColorStop(1, 'rgba(177, 148, 250, 1)');

                    var myChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: [1, 2, 3, 4, 5, 6, 7, 8],
                            datasets: [
                                {
                                    label: "Domestic",
                                    borderColor: gradientStrokeBlue,
                                    backgroundColor: gradientStrokeBlue,
                                    hoverBackgroundColor: gradientStrokeBlue,
                                    pointRadius: 0,
                                    fill: false,
                                    borderWidth: 1,
                                    fill: 'origin',
                                    data: [20, 40, 15, 35, 25, 50, 30, 20]
                                },
                                {
                                    label: "International",
                                    borderColor: '#e9eaee',
                                    backgroundColor: '#e9eaee',
                                    hoverBackgroundColor: '#e9eaee',
                                    pointRadius: 0,
                                    fill: false,
                                    borderWidth: 1,
                                    fill: 'origin',
                                    data: [40, 30, 20, 10, 50, 15, 35, 20]
                                }
                            ]
                        },
                        options: {
                            legend: {
                                display: false
                            },
                            scales: {
                                yAxes: [{
                                    ticks: {
                                        display: false,
                                        min: 0,
                                        stepSize: 10
                                    },
                                    gridLines: {
                                        drawBorder: false,
                                        display: false
                                    }
                                }],
                                xAxes: [{
                                    gridLines: {
                                        display: false,
                                        drawBorder: false,
                                        color: 'rgba(0,0,0,1)',
                                        zeroLineColor: '#eeeeee'
                                    },
                                    ticks: {
                                        padding: 20,
                                        fontColor: "#9c9fa6",
                                        autoSkip: true,
                                    },
                                    barPercentage: 0.7
                                }]
                            }
                        },
                        elements: {
                            point: {
                                radius: 0
                            }
                        }
                    })
                }
                if ($("#visit-sale-chart").length) {
                    Chart.defaults.global.legend.labels.usePointStyle = true;
                    var ctx = document.getElementById('visit-sale-chart').getContext("2d");

                    var gradientStrokeViolet = ctx.createLinearGradient(0, 0, 0, 181);
                    gradientStrokeViolet.addColorStop(0, 'rgba(218, 140, 255, 1)');
                    gradientStrokeViolet.addColorStop(1, 'rgba(154, 85, 255, 1)');
                    var gradientLegendViolet = 'linear-gradient(to right, rgba(218, 140, 255, 1), rgba(154, 85, 255, 1))';

                    var gradientStrokeBlue = ctx.createLinearGradient(0, 0, 0, 360);
                    gradientStrokeBlue.addColorStop(0, 'rgba(54, 215, 232, 1)');
                    gradientStrokeBlue.addColorStop(1, 'rgba(177, 148, 250, 1)');
                    var gradientLegendBlue = 'linear-gradient(to right, rgba(54, 215, 232, 1), rgba(177, 148, 250, 1))';

                    var gradientStrokeRed = ctx.createLinearGradient(0, 0, 0, 300);
                    gradientStrokeRed.addColorStop(0, 'rgba(255, 191, 150, 1)');
                    gradientStrokeRed.addColorStop(1, 'rgba(254, 112, 150, 1)');
                    var gradientLegendRed = 'linear-gradient(to right, rgba(255, 191, 150, 1), rgba(254, 112, 150, 1))';

                    var myChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG'],
                            datasets: [
                                @for (int i = 0; i < 3; i++)
                                {
                                      <text>
                                    {
                                        label: "Top @i công việc",
                                        borderColor: gradientStrokeViolet,
                                        backgroundColor: gradientStrokeViolet,
                                        hoverBackgroundColor: gradientStrokeViolet,
                                        legendColor: gradientLegendViolet,
                                        pointRadius: 0,
                                        fill: false,
                                        borderWidth: 1,
                                        fill: 'origin',
                                        data: @Html.Raw(Json.Serialize(Model.TopJobsByMonth.Select(m => m.TopCongViecs.ElementAtOrDefault(i)?.SoLanXuatHien ?? 0)))
                                },
                                      </text>
                                }
                            ]
                        },
                        options: {
                            responsive: true,
                            legend: false,
                            legendCallback: function (chart) {
                                var text = [];
                                text.push('<ul>');
                                for (var i = 0; i < chart.data.datasets.length; i++) {
                                    text.push('<li><span class="legend-dots" style="background:' +
                                        chart.data.datasets[i].legendColor +
                                        '"></span>');
                                    if (chart.data.datasets[i].label) {
                                        text.push(chart.data.datasets[i].label);
                                    }
                                    text.push('</li>');
                                }
                                text.push('</ul>');
                                return text.join('');
                            },
                            scales: {
                                yAxes: [{
                                    ticks: {
                                        display: false,
                                        min: 0,
                                        stepSize: 20,
                                        max: 80
                                    },
                                    gridLines: {
                                        drawBorder: false,
                                        color: 'rgba(235,237,242,1)',
                                        zeroLineColor: 'rgba(235,237,242,1)'
                                    }
                                }],
                                xAxes: [{
                                    gridLines: {
                                        display: false,
                                        drawBorder: false,
                                        color: 'rgba(0,0,0,1)',
                                        zeroLineColor: 'rgba(235,237,242,1)'
                                    },
                                    ticks: {
                                        padding: 20,
                                        fontColor: "#9c9fa6",
                                        autoSkip: true,
                                    },
                                    categoryPercentage: 0.5,
                                    barPercentage: 0.5
                                }]
                            }
                        },
                        elements: {
                            point: {
                                radius: 0
                            }
                        }
                    })
                    $("#visit-sale-chart-legend").html(myChart.generateLegend());
                }
                if ($("#visit-sale-chart-dark").length) {
                    Chart.defaults.global.legend.labels.usePointStyle = true;
                    var ctx = document.getElementById('visit-sale-chart-dark').getContext("2d");

                    var gradientStrokeViolet = ctx.createLinearGradient(0, 0, 0, 181);
                    gradientStrokeViolet.addColorStop(0, 'rgba(218, 140, 255, 1)');
                    gradientStrokeViolet.addColorStop(1, 'rgba(154, 85, 255, 1)');
                    var gradientLegendViolet = 'linear-gradient(to right, rgba(218, 140, 255, 1), rgba(154, 85, 255, 1))';

                    var gradientStrokeBlue = ctx.createLinearGradient(0, 0, 0, 360);
                    gradientStrokeBlue.addColorStop(0, 'rgba(54, 215, 232, 1)');
                    gradientStrokeBlue.addColorStop(1, 'rgba(177, 148, 250, 1)');
                    var gradientLegendBlue = 'linear-gradient(to right, rgba(54, 215, 232, 1), rgba(177, 148, 250, 1))';

                    var gradientStrokeRed = ctx.createLinearGradient(0, 0, 0, 300);
                    gradientStrokeRed.addColorStop(0, 'rgba(255, 191, 150, 1)');
                    gradientStrokeRed.addColorStop(1, 'rgba(254, 112, 150, 1)');
                    var gradientLegendRed = 'linear-gradient(to right, rgba(255, 191, 150, 1), rgba(254, 112, 150, 1))';

                    var myChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG'],
                            datasets: [
                                {
                                    label: "CHN",
                                    borderColor: gradientStrokeViolet,
                                    backgroundColor: gradientStrokeViolet,
                                    hoverBackgroundColor: gradientStrokeViolet,
                                    legendColor: gradientLegendViolet,
                                    pointRadius: 0,
                                    fill: false,
                                    borderWidth: 1,
                                    fill: 'origin',
                                    data: [20, 40, 15, 35, 25, 50, 30, 20]
                                },
                                {
                                    label: "USA",
                                    borderColor: gradientStrokeRed,
                                    backgroundColor: gradientStrokeRed,
                                    hoverBackgroundColor: gradientStrokeRed,
                                    legendColor: gradientLegendRed,
                                    pointRadius: 0,
                                    fill: false,
                                    borderWidth: 1,
                                    fill: 'origin',
                                    data: [40, 30, 20, 10, 50, 15, 35, 40]
                                },
                                {
                                    label: "UK",
                                    borderColor: gradientStrokeBlue,
                                    backgroundColor: gradientStrokeBlue,
                                    hoverBackgroundColor: gradientStrokeBlue,
                                    legendColor: gradientLegendBlue,
                                    pointRadius: 0,
                                    fill: false,
                                    borderWidth: 1,
                                    fill: 'origin',
                                    data: [10, 10, 30, 40, 25, 50, 15, 30]
                                }
                            ]
                        },
                        options: {
                            responsive: true,
                            legend: false,
                            legendCallback: function (chart) {
                                var text = [];
                                text.push('<ul>');
                                for (var i = 0; i < chart.data.datasets.length; i++) {
                                    text.push('<li><span class="legend-dots" style="background:' +
                                        chart.data.datasets[i].legendColor +
                                        '"></span>');
                                    if (chart.data.datasets[i].label) {
                                        text.push(chart.data.datasets[i].label);
                                    }
                                    text.push('</li>');
                                }
                                text.push('</ul>');
                                return text.join('');
                            },
                            scales: {
                                yAxes: [{
                                    ticks: {
                                        display: false,
                                        min: 0,
                                        stepSize: 20,
                                        max: 80
                                    },
                                    gridLines: {
                                        drawBorder: false,
                                        color: '#322f2f',
                                        zeroLineColor: '#322f2f'
                                    }
                                }],
                                xAxes: [{
                                    gridLines: {
                                        display: false,
                                        drawBorder: false,
                                        color: 'rgba(0,0,0,1)',
                                        zeroLineColor: 'rgba(235,237,242,1)'
                                    },
                                    ticks: {
                                        padding: 20,
                                        fontColor: "#9c9fa6",
                                        autoSkip: true,
                                    },
                                    categoryPercentage: 0.5,
                                    barPercentage: 0.5
                                }]
                            }
                        },
                        elements: {
                            point: {
                                radius: 0
                            }
                        }
                    })
                    $("#visit-sale-chart-legend-dark").html(myChart.generateLegend());
                }
                if ($("#traffic-chart").length) {
                    var gradientStrokeBlue = ctx.createLinearGradient(0, 0, 0, 181);
                    gradientStrokeBlue.addColorStop(0, 'rgba(54, 215, 232, 1)');
                    gradientStrokeBlue.addColorStop(1, 'rgba(177, 148, 250, 1)');
                    var gradientLegendBlue = 'linear-gradient(to right, rgba(54, 215, 232, 1), rgba(177, 148, 250, 1))';

                    var gradientStrokeRed = ctx.createLinearGradient(0, 0, 0, 50);
                    gradientStrokeRed.addColorStop(0, 'rgba(255, 191, 150, 1)');
                    gradientStrokeRed.addColorStop(1, 'rgba(254, 112, 150, 1)');
                    var gradientLegendRed = 'linear-gradient(to right, rgba(255, 191, 150, 1), rgba(254, 112, 150, 1))';

                    var gradientStrokeGreen = ctx.createLinearGradient(0, 0, 0, 300);
                    gradientStrokeGreen.addColorStop(0, 'rgba(6, 185, 157, 1)');
                    gradientStrokeGreen.addColorStop(1, 'rgba(132, 217, 210, 1)');
                    var gradientLegendGreen = 'linear-gradient(to right, rgba(6, 185, 157, 1), rgba(132, 217, 210, 1))';





                    var trafficChartData = {
                        datasets: [{
                            data: [@Html.DisplayFor(model => model.Goi100k), @Html.DisplayFor(model => model.Goi300k), @Html.DisplayFor(model => model.Goi500k)],
                            backgroundColor: [
                                gradientStrokeBlue,
                                gradientStrokeGreen,
                                gradientStrokeRed
                            ],
                            hoverBackgroundColor: [
                                gradientStrokeBlue,
                                gradientStrokeGreen,
                                gradientStrokeRed
                            ],
                            borderColor: [
                                gradientStrokeBlue,
                                gradientStrokeGreen,
                                gradientStrokeRed
                            ],
                            legendColor: [
                                gradientLegendBlue,
                                gradientLegendGreen,
                                gradientLegendRed
                            ]
                        }],

                        // These labels appear in the legend and in the tooltips when hovering different arcs
                        labels: [
                            'Gói 100k',
                            'Gói 300k',
                            'Gói 500k',
                        ]
                    };


                    var trafficChartOptions = {
                        responsive: true,
                        animation: {
                            animateScale: true,
                            animateRotate: true
                        },
                        legend: false,
                        legendCallback: function (chart) {
                            var text = [];
                            text.push('<ul>');
                            for (var i = 0; i < trafficChartData.datasets[0].data.length; i++) {
                                text.push('<li><span class="legend-dots" style="background:' +
                                    trafficChartData.datasets[0].legendColor[i] +
                                    '"></span>');
                                if (trafficChartData.labels[i]) {
                                    text.push(trafficChartData.labels[i]);
                                }
                                text.push('<span class="float-right">' + trafficChartData.datasets[0].data[i] + "%" + '</span>')
                                text.push('</li>');
                            }
                            text.push('</ul>');
                            return text.join('');
                        }
                    };
                    var trafficChartCanvas = $("#traffic-chart").get(0).getContext("2d");
                    var trafficChart = new Chart(trafficChartCanvas, {
                        type: 'doughnut',
                        data: trafficChartData,
                        options: trafficChartOptions
                    });
                    $("#traffic-chart-legend").html(trafficChart.generateLegend());
                }
                if ($("#inline-datepicker").length) {
                    $('#inline-datepicker').datepicker({
                        enableOnReadonly: true,
                        todayHighlight: true,
                    });
                }
            });
        })(jQuery);
    </script>
}